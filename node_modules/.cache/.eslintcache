[{"/Users/kunal/Desktop/My Projects/grocery-bag/src/index.js":"1","/Users/kunal/Desktop/My Projects/grocery-bag/src/App.js":"2","/Users/kunal/Desktop/My Projects/grocery-bag/src/List.js":"3","/Users/kunal/Desktop/My Projects/grocery-bag/src/Alert.js":"4"},{"size":254,"mtime":1684516742000,"results":"5","hashOfConfig":"6"},{"size":3060,"mtime":1699719222581,"results":"7","hashOfConfig":"6"},{"size":808,"mtime":1699717724737,"results":"8","hashOfConfig":"6"},{"size":356,"mtime":1699716273613,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bwc0iz",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/Users/kunal/Desktop/My Projects/grocery-bag/src/index.js",[],[],"/Users/kunal/Desktop/My Projects/grocery-bag/src/App.js",["24","25","26"],[],"import React, { useState, useEffect, useTransition } from \"react\";\nimport List from \"./List\";\nimport Alert from \"./Alert\";\n\nfunction App() {\n  const getlocalstorage = () => {\n    const data = localStorage.getItem(\"list\");\n    if (data) {\n      return JSON.parse(data);\n    } else {\n      return [];\n    }\n  };\n  const [name, setName] = useState(\"\");\n  const [list, setList] = useState(getlocalstorage);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editID, setEditID] = useState(null);\n  const [alert, setAlert] = useState({\n    show: false,\n    msg: \"\",\n    type: \"\",\n  });\n\n  const editeItem = (id) => {\n    const specificItem = list.find((item) => item.id == id);\n    setEditID(id);\n    setIsEditing(true);\n    setName(specificItem.title);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!name) {\n      // show alert\n      showAlert(true, \"danger\", \"Please Enter Something.\");\n    } else if (name && isEditing) {\n      // deal with editmode\n      setList(\n        list.map((item) => {\n          if (item.id === editID) {\n            return { ...item, title: name };\n          }\n          return item;\n        })\n      );\n      setAlert(true, \"success\", \"item is updated.\");\n      setEditID(null);\n      setIsEditing(false);\n      setName(\"\");\n    } else {\n      //show alert\n      showAlert(true, \"success\", `${name} just added to the list`);\n      const newItem = { id: new Date().getTime().toString(), title: name };\n      setList([...list, newItem]);\n      setName(\"\");\n    }\n  };\n\n  const showAlert = (show = false, type = \"\", msg = \"\") => {\n    setAlert({ show, type, msg });\n  };\n  const clearList = () => {\n    showAlert(true, \"danger\", \"list is cleared.\");\n    setList([]);\n    setName(\"\");\n    setEditID(null);\n    setIsEditing(false);\n  };\n  const removeItem = (id) => {\n    showAlert(true, \"danger\", `item is removed`);\n    setList(list.filter((item) => item.id != id));\n    setName(\"\");\n  };\n  useEffect(() => {\n    localStorage.setItem(\"list\", JSON.stringify(list));\n  }, [list]);\n  return (\n    <>\n      <section className=\"section-center\">\n        <form className=\"grocery-form\" onSubmit={handleSubmit}>\n          {alert.show && (\n            <Alert list={list} {...alert} removeAlert={showAlert} />\n          )}\n          <h3>Grocery Bag</h3>\n          <div className=\"form-control\">\n            <input\n              type=\"text\"\n              className=\"grocery\"\n              placeholder=\"e.g eggs\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n            <button type=\"submit\" className=\"submit-btn\">\n              {isEditing ? \"Edit\" : \"Submit\"}\n            </button>\n          </div>\n        </form>\n        {list.length > 0 && (\n          <div className=\"grocery-contaienr\">\n            <List items={list} removeItem={removeItem} editeItem={editeItem} />\n            <button className=\"clear-btn\" onClick={clearList}>\n              Clear List\n            </button>\n          </div>\n        )}\n      </section>\n    </>\n  );\n}\n\nexport default App;\n","/Users/kunal/Desktop/My Projects/grocery-bag/src/List.js",[],[],"/Users/kunal/Desktop/My Projects/grocery-bag/src/Alert.js",["27"],[],"import React, { useEffect } from \"react\";\n\nconst Alert = ({ type, msg, removeAlert, list }) => {\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      removeAlert();\n    }, 3000);\n    return () => clearTimeout(timeout);\n  }, [list]);\n\n  return (\n    <>\n      <p className={`alert alert-${type}`}>{msg}</p>\n    </>\n  );\n};\n\nexport default Alert;\n",{"ruleId":"28","severity":1,"message":"29","line":1,"column":38,"nodeType":"30","messageId":"31","endLine":1,"endColumn":51},{"ruleId":"32","severity":1,"message":"33","line":25,"column":54,"nodeType":"34","messageId":"35","endLine":25,"endColumn":56},{"ruleId":"32","severity":1,"message":"36","line":70,"column":43,"nodeType":"34","messageId":"35","endLine":70,"endColumn":45},{"ruleId":"37","severity":1,"message":"38","line":9,"column":6,"nodeType":"39","endLine":9,"endColumn":12,"suggestions":"40"},"no-unused-vars","'useTransition' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'removeAlert'. Either include it or remove the dependency array. If 'removeAlert' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["41"],{"desc":"42","fix":"43"},"Update the dependencies array to be: [list, removeAlert]",{"range":"44","text":"45"},[236,242],"[list, removeAlert]"]